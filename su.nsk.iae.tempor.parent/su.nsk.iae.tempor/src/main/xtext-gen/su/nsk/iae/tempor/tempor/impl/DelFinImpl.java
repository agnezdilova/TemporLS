/**
 * generated by Xtext 2.30.0
 */
package su.nsk.iae.tempor.tempor.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import su.nsk.iae.tempor.tempor.DelFin;
import su.nsk.iae.tempor.tempor.Delay;
import su.nsk.iae.tempor.tempor.SentenceDeclaration;
import su.nsk.iae.tempor.tempor.TemporPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Del Fin</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link su.nsk.iae.tempor.tempor.impl.DelFinImpl#getDelay <em>Delay</em>}</li>
 *   <li>{@link su.nsk.iae.tempor.tempor.impl.DelFinImpl#getFin <em>Fin</em>}</li>
 *   <li>{@link su.nsk.iae.tempor.tempor.impl.DelFinImpl#isImm <em>Imm</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DelFinImpl extends MinimalEObjectImpl.Container implements DelFin
{
  /**
   * The cached value of the '{@link #getDelay() <em>Delay</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDelay()
   * @generated
   * @ordered
   */
  protected Delay delay;

  /**
   * The cached value of the '{@link #getFin() <em>Fin</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFin()
   * @generated
   * @ordered
   */
  protected SentenceDeclaration fin;

  /**
   * The default value of the '{@link #isImm() <em>Imm</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isImm()
   * @generated
   * @ordered
   */
  protected static final boolean IMM_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isImm() <em>Imm</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isImm()
   * @generated
   * @ordered
   */
  protected boolean imm = IMM_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DelFinImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TemporPackage.Literals.DEL_FIN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Delay getDelay()
  {
    return delay;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDelay(Delay newDelay, NotificationChain msgs)
  {
    Delay oldDelay = delay;
    delay = newDelay;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TemporPackage.DEL_FIN__DELAY, oldDelay, newDelay);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDelay(Delay newDelay)
  {
    if (newDelay != delay)
    {
      NotificationChain msgs = null;
      if (delay != null)
        msgs = ((InternalEObject)delay).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TemporPackage.DEL_FIN__DELAY, null, msgs);
      if (newDelay != null)
        msgs = ((InternalEObject)newDelay).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TemporPackage.DEL_FIN__DELAY, null, msgs);
      msgs = basicSetDelay(newDelay, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TemporPackage.DEL_FIN__DELAY, newDelay, newDelay));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SentenceDeclaration getFin()
  {
    if (fin != null && fin.eIsProxy())
    {
      InternalEObject oldFin = (InternalEObject)fin;
      fin = (SentenceDeclaration)eResolveProxy(oldFin);
      if (fin != oldFin)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, TemporPackage.DEL_FIN__FIN, oldFin, fin));
      }
    }
    return fin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SentenceDeclaration basicGetFin()
  {
    return fin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFin(SentenceDeclaration newFin)
  {
    SentenceDeclaration oldFin = fin;
    fin = newFin;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TemporPackage.DEL_FIN__FIN, oldFin, fin));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isImm()
  {
    return imm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setImm(boolean newImm)
  {
    boolean oldImm = imm;
    imm = newImm;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TemporPackage.DEL_FIN__IMM, oldImm, imm));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TemporPackage.DEL_FIN__DELAY:
        return basicSetDelay(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TemporPackage.DEL_FIN__DELAY:
        return getDelay();
      case TemporPackage.DEL_FIN__FIN:
        if (resolve) return getFin();
        return basicGetFin();
      case TemporPackage.DEL_FIN__IMM:
        return isImm();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TemporPackage.DEL_FIN__DELAY:
        setDelay((Delay)newValue);
        return;
      case TemporPackage.DEL_FIN__FIN:
        setFin((SentenceDeclaration)newValue);
        return;
      case TemporPackage.DEL_FIN__IMM:
        setImm((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TemporPackage.DEL_FIN__DELAY:
        setDelay((Delay)null);
        return;
      case TemporPackage.DEL_FIN__FIN:
        setFin((SentenceDeclaration)null);
        return;
      case TemporPackage.DEL_FIN__IMM:
        setImm(IMM_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TemporPackage.DEL_FIN__DELAY:
        return delay != null;
      case TemporPackage.DEL_FIN__FIN:
        return fin != null;
      case TemporPackage.DEL_FIN__IMM:
        return imm != IMM_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (imm: ");
    result.append(imm);
    result.append(')');
    return result.toString();
  }

} //DelFinImpl
