/**
 * generated by Xtext 2.30.0
 */
package su.nsk.iae.tempor.tempor.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import su.nsk.iae.tempor.tempor.DeclVarInput;
import su.nsk.iae.tempor.tempor.DeclVarOutput;
import su.nsk.iae.tempor.tempor.Model;
import su.nsk.iae.tempor.tempor.ReqDeclaration;
import su.nsk.iae.tempor.tempor.SentDeclaration;
import su.nsk.iae.tempor.tempor.TemporPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link su.nsk.iae.tempor.tempor.impl.ModelImpl#getDeclVarInput <em>Decl Var Input</em>}</li>
 *   <li>{@link su.nsk.iae.tempor.tempor.impl.ModelImpl#getDeclVarOutput <em>Decl Var Output</em>}</li>
 *   <li>{@link su.nsk.iae.tempor.tempor.impl.ModelImpl#getSentDeclaration <em>Sent Declaration</em>}</li>
 *   <li>{@link su.nsk.iae.tempor.tempor.impl.ModelImpl#getReqDeclaration <em>Req Declaration</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The cached value of the '{@link #getDeclVarInput() <em>Decl Var Input</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclVarInput()
   * @generated
   * @ordered
   */
  protected EList<DeclVarInput> declVarInput;

  /**
   * The cached value of the '{@link #getDeclVarOutput() <em>Decl Var Output</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclVarOutput()
   * @generated
   * @ordered
   */
  protected EList<DeclVarOutput> declVarOutput;

  /**
   * The cached value of the '{@link #getSentDeclaration() <em>Sent Declaration</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSentDeclaration()
   * @generated
   * @ordered
   */
  protected EList<SentDeclaration> sentDeclaration;

  /**
   * The cached value of the '{@link #getReqDeclaration() <em>Req Declaration</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReqDeclaration()
   * @generated
   * @ordered
   */
  protected EList<ReqDeclaration> reqDeclaration;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TemporPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DeclVarInput> getDeclVarInput()
  {
    if (declVarInput == null)
    {
      declVarInput = new EObjectContainmentEList<DeclVarInput>(DeclVarInput.class, this, TemporPackage.MODEL__DECL_VAR_INPUT);
    }
    return declVarInput;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DeclVarOutput> getDeclVarOutput()
  {
    if (declVarOutput == null)
    {
      declVarOutput = new EObjectContainmentEList<DeclVarOutput>(DeclVarOutput.class, this, TemporPackage.MODEL__DECL_VAR_OUTPUT);
    }
    return declVarOutput;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<SentDeclaration> getSentDeclaration()
  {
    if (sentDeclaration == null)
    {
      sentDeclaration = new EObjectContainmentEList<SentDeclaration>(SentDeclaration.class, this, TemporPackage.MODEL__SENT_DECLARATION);
    }
    return sentDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ReqDeclaration> getReqDeclaration()
  {
    if (reqDeclaration == null)
    {
      reqDeclaration = new EObjectContainmentEList<ReqDeclaration>(ReqDeclaration.class, this, TemporPackage.MODEL__REQ_DECLARATION);
    }
    return reqDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TemporPackage.MODEL__DECL_VAR_INPUT:
        return ((InternalEList<?>)getDeclVarInput()).basicRemove(otherEnd, msgs);
      case TemporPackage.MODEL__DECL_VAR_OUTPUT:
        return ((InternalEList<?>)getDeclVarOutput()).basicRemove(otherEnd, msgs);
      case TemporPackage.MODEL__SENT_DECLARATION:
        return ((InternalEList<?>)getSentDeclaration()).basicRemove(otherEnd, msgs);
      case TemporPackage.MODEL__REQ_DECLARATION:
        return ((InternalEList<?>)getReqDeclaration()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TemporPackage.MODEL__DECL_VAR_INPUT:
        return getDeclVarInput();
      case TemporPackage.MODEL__DECL_VAR_OUTPUT:
        return getDeclVarOutput();
      case TemporPackage.MODEL__SENT_DECLARATION:
        return getSentDeclaration();
      case TemporPackage.MODEL__REQ_DECLARATION:
        return getReqDeclaration();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TemporPackage.MODEL__DECL_VAR_INPUT:
        getDeclVarInput().clear();
        getDeclVarInput().addAll((Collection<? extends DeclVarInput>)newValue);
        return;
      case TemporPackage.MODEL__DECL_VAR_OUTPUT:
        getDeclVarOutput().clear();
        getDeclVarOutput().addAll((Collection<? extends DeclVarOutput>)newValue);
        return;
      case TemporPackage.MODEL__SENT_DECLARATION:
        getSentDeclaration().clear();
        getSentDeclaration().addAll((Collection<? extends SentDeclaration>)newValue);
        return;
      case TemporPackage.MODEL__REQ_DECLARATION:
        getReqDeclaration().clear();
        getReqDeclaration().addAll((Collection<? extends ReqDeclaration>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TemporPackage.MODEL__DECL_VAR_INPUT:
        getDeclVarInput().clear();
        return;
      case TemporPackage.MODEL__DECL_VAR_OUTPUT:
        getDeclVarOutput().clear();
        return;
      case TemporPackage.MODEL__SENT_DECLARATION:
        getSentDeclaration().clear();
        return;
      case TemporPackage.MODEL__REQ_DECLARATION:
        getReqDeclaration().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TemporPackage.MODEL__DECL_VAR_INPUT:
        return declVarInput != null && !declVarInput.isEmpty();
      case TemporPackage.MODEL__DECL_VAR_OUTPUT:
        return declVarOutput != null && !declVarOutput.isEmpty();
      case TemporPackage.MODEL__SENT_DECLARATION:
        return sentDeclaration != null && !sentDeclaration.isEmpty();
      case TemporPackage.MODEL__REQ_DECLARATION:
        return reqDeclaration != null && !reqDeclaration.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ModelImpl
